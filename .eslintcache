[{"/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/index.js":"1","/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Component/Crud/Crud.js":"2","/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Component/Crud/ElTable.js":"3","/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Component/Crud/ElItem.js":"4","/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/App.js":"5","/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Page/Users/User.js":"6","/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Page/Users/Component/Table.js":"7","/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Page/Users/Component/Item.js":"8","/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Page/Users/Component/Unmount.js":"9"},{"size":260,"mtime":1610007031909,"results":"10","hashOfConfig":"11"},{"size":147,"mtime":1609993437737,"results":"12","hashOfConfig":"11"},{"size":3541,"mtime":1610098425257,"results":"13","hashOfConfig":"11"},{"size":3592,"mtime":1610117493552,"results":"14","hashOfConfig":"11"},{"size":607,"mtime":1610096668095,"results":"15","hashOfConfig":"11"},{"size":4376,"mtime":1610163224636,"results":"16","hashOfConfig":"11"},{"size":1666,"mtime":1610161322643,"results":"17","hashOfConfig":"11"},{"size":5282,"mtime":1610163286879,"results":"18","hashOfConfig":"11"},{"size":173,"mtime":1610155125693,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mv37j8",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/index.js",[],"/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Component/Crud/Crud.js",[],"/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Component/Crud/ElTable.js",[],"/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Component/Crud/ElItem.js",["40","41","42"],"import React, {Component} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {Redirect, Link} from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass ElItem extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    getFormGroups() {\n        var argument = this.props.argument;\n        delete argument['buttonDel'];\n        delete argument['buttonEdit'];\n        delete argument['buttonView'];\n        var keys = Object.keys(argument);\n        var forms = keys.map(\n            (key) => {\n                var type = \"text\";\n                if ( argument[key]?.type === \"number\") {\n                    type = \"number\";\n                } \n                return <Form.Group key={key}>\n                        <Form.Label>{argument[key]?.label}</Form.Label>\n                    <Form.Control readOnly={\n                        function(mode) {\n                            var readOnly = false;\n                            if ( mode === \"view\" ) {\n                                readOnly = true;\n                            }\n                            return readOnly;\n                        }(this.props.mode)\n                    } key={key} type={type} defaultValue={\n                        function(mode, item) {\n                            if ( mode === \"edit\" || mode === \"view\") {\n                                return item;\n                            } \n                            return \"\";\n                        }(this.props.mode, this.props.item[key])\n                    } name={key}/>\n                    </Form.Group>\n            }\n        );\n        return forms.filter(Boolean);\n    }\n\n    getButton(id) {\n        if ( this.props.mode === \"view\" ) {\n            return \"\";\n        } else if ( this.props.mode === \"edit\" ) {\n            return <><Button variant=\"primary\" onClick={this.props.editItemAjax} type=\"submit\">\n            Save\n            </Button> {' '}\n            <Button variant=\"secondary\" onClick={this.props.delItemAjax} >\n            Del\n            </Button></> ;\n        }\n      return  <><Button variant=\"primary\" onClick={this.props.newItemAjax } >\n             Create\n             </Button> {' '}\n             </> ;\n    }\n\n    render() {\n        return <Form>\n            {this.getFormGroups()}\n            {this.getButton(this.props.item.id)}\n        </Form>\n    }\n}\n\nElItem.defaultProps = {\n    mode : \"edit\",\n    item : {\n        id : 1,\n        name: \"Djo\",\n        age: 30\n    },\n    argument : {\n        id : {\n            label: \"Ид\",\n            type: \"number\",\n            attribute: {\n                style: {\n                    width: \"20px\"\n                }\n            }\n        },\n        first_name : {\n            label: \"Имя\",\n            type: \"text\",\n            attribute: {\n              \n            }\n        },\n        email : {\n            label: \"Эмайл\",\n            type: \"text\",\n            attribute: {\n              \n            }\n        },\n        buttonDel : {\n            label: \"уд.\",\n            attribute: {\n                style: {\n                    width: \"20px\"\n                }\n            }\n        },\n        buttonView: {\n            label: \"см.\",\n            attribute: {\n                style: {\n                    width: \"20px\"\n                }\n            }\n        },\n        buttonEdit: {\n            label: \"ред.\",\n            attribute: {\n                style: {\n                    width: \"20px\"\n                }\n            }\n        }\n    },\n}\n\nexport default ElItem;","/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/App.js",[],["43","44"],"/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Page/Users/User.js",[],"/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Page/Users/Component/Table.js",[],"/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Page/Users/Component/Item.js",[],"/home/ganbatte/Desktop/react-app/crud-component-bootstrap/src/Page/Users/Component/Unmount.js",["45","46"],{"ruleId":"47","severity":1,"message":"48","line":4,"column":9,"nodeType":"49","messageId":"50","endLine":4,"endColumn":17},{"ruleId":"47","severity":1,"message":"51","line":4,"column":19,"nodeType":"49","messageId":"50","endLine":4,"endColumn":23},{"ruleId":"52","severity":1,"message":"53","line":10,"column":5,"nodeType":"54","messageId":"55","endLine":12,"endColumn":6},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":9,"nodeType":"49","messageId":"50","endLine":2,"endColumn":17},{"ruleId":"47","severity":1,"message":"60","line":4,"column":7,"nodeType":"49","messageId":"50","endLine":4,"endColumn":14},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'Unmount' is defined but never used.","no-global-assign","no-unsafe-negation"]